#include <iostream>
#include <vector>
#include <string>

using namespace std;

void displayMenu() {
    cout << "To-Do List Manager\n";
    cout << "1. View tasks\n";
    cout << "2. Add task\n";
    cout << "3. Delete task\n";
    cout << "4. Exit\n";
    cout << "Enter your choice: ";
}

void viewTasks(const vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "Your to-do list is empty!\n";
    } else {
        cout << "Your tasks:\n";
        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". " << tasks[i] << endl;
        }
    }
    cout << endl;
}

void addTask(vector<string>& tasks) {
    string task;
    cout << "Enter a new task: ";
    cin.ignore();  // To clear the newline left in the buffer
    getline(cin, task);
    tasks.push_back(task);
    cout << "Task added successfully!\n\n";
}

void deleteTask(vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "Your to-do list is empty! There's nothing to delete.\n\n";
    } else {
        int taskNumber;
        cout << "Enter the task number to delete: ";
        cin >> taskNumber;

        if (taskNumber > 0 && taskNumber <= tasks.size()) {
            tasks.erase(tasks.begin() + taskNumber - 1);
            cout << "Task deleted successfully!\n\n";
        } else {
            cout << "Invalid task number!\n\n";
        }
    }
}

int main() {
    vector<string> tasks;
    int choice;

    while (true) {
        displayMenu();
        cin >> choice;

        switch (choice) {
            case 1:
                viewTasks(tasks);
                break;
            case 2:
                addTask(tasks);
                break;
            case 3:
                deleteTask(tasks);
                break;
            case 4:
                cout << "Exiting To-Do List Manager. Goodbye!\n";
                return 0;
            default:
                cout << "Invalid choice! Please try again.\n\n";
        }
    }

    return 0;
}
